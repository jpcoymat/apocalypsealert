<h3>Quick Filter <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#fullFilter">Pop</button></h3>
<ul class="nav nav-pills nav-stacked">
<% @filter_object.filter_elements.each do |filter_element| %>
  <li><%= select_tag filter_element.element_name, filter_element.filter_select_options.html_safe, multiple: filter_element.multiselectable, class: 'form-control chosen-select', data: {placeholder: filter_element.display_name} %></li>
<% end %>
<li><button type="submit" class="btn btn-primary" onclick="javacript:refreshData()">Refresh</button></li>
</ul>

<div id="fullFilter" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
	<div class="modal-dialog">
	    <div class="modal-content">
	      <div class="modal-header">
	        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
	        <h4 class="modal-title" id="myModalLabel">Filter Options</h4>
	      </div>
	      <div class="modal-body">
	        <form class="form-horizontal">
					<% @filter_object.filter_elements.each do |filter_element| %>
					  <div class="form-group">
						  <%= label_tag filter_element.element_name, filter_element.display_name, class: "col-xs-3 control-label" %>
						  <div class="col-xs-5">
					      <%= select_tag filter_element.element_name, filter_element.filter_select_options.html_safe, multiple: filter_element.multiselectable, class: 'form-control chzn-select', id: "pop-"+filter_element.element_name,  tabindex: "2"  %>
					    </div>
					    <div class="checkbox" >
						    <label>
							    <input type="checkbox" id="chbx-<%= filter_element.element_name %>">
							  </label>
							</div>
					  </div>
					<% end %>
	        </form>
	      </div>
	      <div class="modal-footer">
	        <button type="button" class="btn btn-primary" data-dismiss="modal">Filter</button>
	        <button type="button" class="btn btn-primary">Filter and Save</button>
	      </div>
	    </div>
	  </div>
</div>

 <script type="text/javascript" charset="utf-8">

  var lastParametersUsed = [];
  var newData;
  var serverData = $.parseJSON('<%= @initial_data.to_json.html_safe %>'); 
  var attribute_view = "quantity";
  var group_by = '<%= @default_group_by %>';

  console.log(serverData);

  function refreshData() {
    var parameters = [];
		attribute_view = $("#attribute_view").val();
		lastParametersUsed =[];
		<% @filter_object.filter_elements.each do |filter_element|  %>
		parameters.push({'<%= filter_element.element_name %>': $("#<%= filter_element.element_name %>").val()}); 
		<% end %>
		var url =  "<%= @target_url %>?" 
		parameters.forEach( function(arrayItem) {
		  var parameter_key =   Object.keys(arrayItem)[0];
		  var parameter_value = arrayItem[parameter_key];
		  if (parameter_value !== null) {
			  url +=  parameter_key + "=" + parameter_value + "&"
			  lastParametersUsed.push({attribute_name: parameter_key, attribute_value: parameter_value});  
		  }
		}); 

		$.get(url, function(data){
		  if (typeof(data) != "object") {
		    serverData = $.parseJSON(data);
		  } 
		  else {
		    serverData = data;
		  }
		  resetTable(serverData[group_by]);
		  newData = serverData[group_by].series[attribute_view];
		  var chart = $("#<%= @chart_div_id %>").highcharts();
		  $.each(chart.series, function( index, value ) {
	      chart.series[index].update({data: newData.data}, false);
		  }); 
		  chart.redraw();
		}); 
  }
	
	function resetTable(tableData){
		console.log(tableData);
		var columnHeaders = tableData.chart_categories;
		var series = tableData.series;
		var html = '<table class="table table-striped" id="global_table"> <tr><th></th>';
		$.each(columnHeaders, function(index, value) {
			html += '<th>' + value + '</th>'
		});
		html += '</tr>';
		console.log(series);
		$.each(series, function(key, value) {
			console.log(key + ":" + value);
			html += '<tr>';
			var serie = value;
			console.log(serie);
			$.each(serie, function(key,value){
				if (key == "name") {
					console.log("outputting name");
				  html += '<td>' + value + '</td>';
			  }
				else {
					console.log("outputting serie.data");
					console.log(value);
					$.each(value, function(key,value){
						console.log("looping thru serie.data array values");
						console.log("key: " + key);
						console.log("value: " + value);
	          html += '<td>' + value + '</td>' ;
				  });
				}
			})
			html += '</tr>';
		});
		html += '</table>';
		console.log(html);
		$("#results_table").replaceWith(html);
	}
	
	$(function() {
		

	  <% @filter_object.filter_elements.each do |filter_element| %>
	  $("#<%= filter_element.element_name %>").chosen({search_contains: true});
	  <% if filter_element.enabled_for_quick_filter %>
	  $("#chbx-<%= filter_element.element_name %>").prop('checked', true);
	  <% end %>
	  <% if filter_element.element_value %>
	  $("#<%= filter_element.element_name %>").val(<%= filter_element.element_value %>);
	  lastParametersUsed.push({attribute_name: '<%= filter_element.element_name %>', attribute_value: '<%= filter_element.element_value %>'});
	  $("#<%= filter_element.element_name %>").trigger("chosen:updated");
	  <% end %>
	  <% end %>

	  $("#fullFilter").on('shown.bs.modal', function (){
	    $('.chzn-select', this).chosen({search_contains: true});
	  });

	  $("#attribute_view").change(function(){
	    attribute_view = $(this).val();
	    var newChartData = serverData[group_by].series[attribute_view];
	    var chart = $("#<%= @chart_div_id %>").highcharts();
	    $.each(chart.series, function( index, value ) {
	      chart.series[index].update({name: newChartData.name, data: newChartData.data}, false);
	    }); 
	    chart.redraw();
	  });
	});
	
 </script>

	