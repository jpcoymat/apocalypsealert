<h3>Quick Filter <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#fullFilter">Pop</button></h3>
<h4>Search Criteria</h4>
<%= select_tag :saved_search_criterium_id, options_from_collection_for_select(@saved_search_criteria, "id", "name", @default_saved_criterium.id), class: 'form-control' %>
<br \>
<br \>
<ul class="nav nav-pills nav-stacked" id="quick_filter">
<% @filter_object.filter_elements.each do |filter_element| %>
  <li><%= select_tag filter_element.element_name, filter_element.filter_select_options.html_safe, multiple: filter_element.multiselectable, class: 'form-control chosen-select', data: {placeholder: filter_element.display_name} %></li>
<% end %>
  <li>
	  <button type="submit" class="btn btn-primary" onclick="javacript:refreshData()">Run</button>
	  <button type="submit" class="btn btn-primary" onclick="javacript:saveAndRun()">Save & Run</button>
  </li>
</ul>


 <script type="text/javascript" charset="utf-8">

  var lastParametersUsed = [];
  var newData;
  var serverData = $.parseJSON('<%= @initial_data.to_json.html_safe %>'); 
  var attribute_view = "quantity";
  var group_by = '<%= @default_group_by %>';
	var baseUrl =  "<%= @target_url %>?" ;

  var savedCriterium;
  var parameters = [];
	<% @filter_object.filter_elements.each do |filter_element|  %>
	parameters.push('<%= filter_element.element_name %>'); 
	<% end %>
	
	function toObject(paramArray){
		var toObj = {};
		paramArray.forEach(function(parameter){
			console.log(parameter.attribute_name);
			console.log(parameter.attribute_value);
			toObj[parameter.attribute_name] = parameter.attribute_value;
		});
		console.log(toObj);
		return toObj;
	}
	
	function getUrl(){
		var url = baseUrl;
		lastParametersUsed = getLastParameters();
		lastParametersUsed.forEach(function(arrayItem) {
			url += arrayItem.attribute_name + "=" + arrayItem.attribute_value + "&"; 
		});
		return url;
	}
	
	function getLastParameters(){
		var lastParams = []
	  parameters.forEach( function(arrayItem) {
		  var parameter_value = $("#"+arrayItem).val();
		  if (parameter_value !== null) {
			  lastParams.push({attribute_name: arrayItem, attribute_value: parameter_value});  
		  }
		});
		return lastParams;	
	}
	
  function refreshData() {
		attribute_view = $("#attribute_view").val();
    var url = getUrl();
		$.get(url, function(data){
		  if (typeof(data) != "object") {
		    serverData = $.parseJSON(data);
		  } 
		  else {
		    serverData = data;
		  }
		  resetTable(serverData[group_by]);
		  newData = serverData[group_by].series[attribute_view];
		  var chart = $("#<%= @chart_div_id %>").highcharts();
		  $.each(chart.series, function( index, value ) {
	      chart.series[index].update({data: newData.data}, false);
		  }); 
		  chart.redraw();
		}); 
  }
	
	function resetTable(tableData){
		var columnHeaders = tableData.chart_categories;
		var series = tableData.series;
		var html = '<table class="table table-striped" id="global_table"> <tr><th></th>';
		$.each(columnHeaders, function(index, value) {
			html += '<th>' + value + '</th>'
		});
		html += '</tr>';
		$.each(series, function(key, value) {
			html += '<tr>';
			var serie = value;
			$.each(serie, function(key,value){
				if (key == "name") {
				  html += '<td>' + value + '</td>';
			  }
				else {
					$.each(value, function(key,value){
	          html += '<td>' + value + '</td>' ;
				  });
				}
			})
			html += '</tr>';
		});
		html += '</table>';
		$("#results_table").replaceWith(html);
	}
	
	function populateFilter(savedCriterium){
		$.each(savedCriterium.search_parameters, function(k,v) {
		  $("#" + k).val(v);	
		});
	}
	
	function cleanAndResetQuickFilter(newCriteria){
		console.log("clearing old values");
		$('.chosen-select','#quick_filter').val('').trigger('chosen:updated');
		console.log("starting to set new values");
		$.each(newCriteria, function(k,v) {
			console.log("setting value for " + k + " with value " + v);
			$("#"+k).val(v).trigger('chosen:updated');
		});
	}
	
	function saveAndRun(){
		var url = "/saved_search_criteria/" + savedCriterium.id + ".json";
		lastParametersUsed = getLastParameters();
		savedCriterium.search_parameters = toObject(lastParametersUsed);
		console.log(savedCriterium);
		$.ajax({
			type: "PUT",
			url: url,
			data: {saved_search_criterium: savedCriterium},
			success: function(){
			  console.log("yay!")	
			}		
		});
		refreshData();
	}
	
	
	
	$(function() {
		
		attribute_view = $("#attribute_view").val();
		
		<% if @default_saved_criterium %>
		savedCriterium = $.parseJSON('<%= @default_saved_criterium.to_json.html_safe %>'); 
		<% else %>
		savedCriterium = {};
		<% end %>
		
		if (savedCriterium) {
			console.log(savedCriterium.id);
		};

	  $("#attribute_view").change(function(){
	    attribute_view = $(this).val();
	    var newChartData = serverData[group_by].series[attribute_view];
	    var chart = $("#<%= @chart_div_id %>").highcharts();
	    $.each(chart.series, function( index, value ) {
	      chart.series[index].update({name: newChartData.name, data: newChartData.data}, false);
	    }); 
	    chart.redraw();
	  });
	  
	  $("#saved_search_criterium_id").change(function(){
		  var savedSearchCriteriumId = $(this).val();
		  var url = "/saved_search_criteria/" + savedSearchCriteriumId + ".json";		
		  console.log(savedSearchCriteriumId);
		  $.get(url, function(data){
			  if (typeof(data) != "object") {
			    savedCriterium = $.parseJSON(data);
			  } 
			  else {
			    savedCriterium = data;
			  }
			  console.log(savedCriterium);
			  cleanAndResetQuickFilter(savedCriterium.search_parameters);
			
			});
			
	  }); 
	
	  populateFilter(savedCriterium);
	
	});
	
 </script>

	